<% layout('layout') -%>
<!-- TODO Agregar validaciones a los campos, chequear cajas duplicadas o agregadas a otros grupos, permitir editar grupos -->

<div class="container-fluid" ng-app="Caller" ng-controller="callerController" ng-init="init()">

  <div class="row paydesk_header">
    <h1>Caja  <span class="bold"><%= paydesk.number %></span></h1>
    <h3>Tipo de atención: <span class="bold"><%= group.name %></span></h3>
  </div>


  <div class="row">
    <div class="col-md-6">
        <h3>Cliente en atención</h3>
    </div>
    <div class="col-md-6">
        <h3>Cliente llamado</h3>
    </div>
  </div>

  <div class="row">
    <div class="col-md-3">
        <h4>Número:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="current_client.number"></h4>
    </div>
    <div class="col-md-3">
        <h4>Número:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="called_client.number"></h4>
    </div>
  </div>

  <div class="row">
    <div class="col-md-3">
        <h4>Horario de ingreso:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="formatTimestamp(current_client.enqueue_time)"></h4>
    </div>
    <div class="col-md-3">
        <h4>Horario de ingreso:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="formatTimestamp(called_client.enqueue_time)"></h4>
    </div>
  </div>

  <div class="row">
    <div class="col-md-3">
        <h4>Respuesta:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="current_client.response"></h4>
    </div>
    <div class="col-md-3">
        <h4>Respuesta:</h4>
    </div>
    <div class="col-md-3">
        <h4 class="bold" ng-bind="called_client.response"></h4>
    </div>
  </div>

  <div class="row" style="text-align: center;">
    <a href="#"  id="call_button" class="btn btn-success" ng-click="callNext()">Próximo</a>
  </div>

</div>

<script type='text/javascript' src='/javascripts/socket.io.js'></script>
<script>



  var app = angular.module('Caller', []);
  app.controller('callerController', function($scope,$http) {

      $scope.current_client = {};
      $scope.called_client = {};
      $scope.paydesk = {};
      $scope.socket = null;

      $scope.init = function() {

        $scope.socket = io('http://localhost:3232');

        $scope.socket.on('client_response', function (data) {

          if (data.paydesk_number != <%= paydesk.number %>) return;

          switch (data.message) {

              case 'confirmed':
                $scope.called_client.response = "Confirmado";
              // Set TIMEOUT and COUNTER
                $("#call_button").removeAttr("disabled");
              break;

              case 'error':
                $scope.called_client.response = "ERROR";
                $("#call_button").removeAttr("disabled");
              break;

              case 'cancelled':
                $scope.called_client.response = "Cancelado";
                $("#call_button").removeAttr("disabled");
              break;

              default:
                $scope.called_client.response = "Reencolado";
                $("#call_button").removeAttr("disabled");
              break;
           }

           $scope.$apply();

        });
      }

      $scope.load = function(paydesk_id) {
        $http.get("/paydesks/<%= paydesk._id %>").success(function(paydesk) {
          $scope.paydesk = paydesk;
        });
      }

      $scope.callNext = function() {
        //if ($("#call_button").attr("disabled")) return;

        $http.get("/paydesks/<%= paydesk._id %>/clients/next").success(function(next_client) {

          $("#call_button").attr("disabled","disabled");
          $scope.current_client = $scope.called_client;
          $scope.called_client = next_client;
          $scope.called_client.response = "Esperando respuesta...";
        }).error(function() {
            $scope.called_client.number = "No hay mas clientes.";
        });
      }

      $scope.formatTimestamp = function(timestamp) {

        var date = new Date(timestamp);
        return timestamp == undefined ? '' : date.getHours()+':'+date.getMinutes();
      }

  });

</script>


