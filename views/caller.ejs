<% layout('./layouts/layout') -%>

<div class="container-fluid" ng-app="Caller" ng-controller="callerController" ng-init="init()">

    <p>
      <div class="row visible-xs-block">
        <span class="small">Caja</span> <span class="colored small"><%= paydesk.number %></span>
        <span class="small"> - </span> <span class="colored small" ><%= paydesk.group.name %></span>
      </div>

      <div class="row hidden-xs">
        <span class="medium">Caja</span> <span class="colored medium"><%= paydesk.number %></span>
        <span class="medium"> - </span> <span class="colored medium" ><%= paydesk.group.name %></span>
      </div>
    </p>

  <div class="row">
    <div class="col-md-6">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">Último Cliente</h3>
        </div>
        <table class="table">
          <tr>
            <td class="text-left">
              <i class="fa fa-ticket fa-2x"></i>
            </td>
            <td class="bold colored medium text-center" ng-bind="current_client.number">
            </td>
          </tr>
          <tr>
            <td>
              <i class="fa fa-clock-o fa-2x"></i>&nbsp;
            </td>
            <td class="bold colored medium text-center" ng-bind="formatTimestamp(current_client.enqueue_time)">
            </td>
          </tr>
           <tr>
            <td>
              <i class="fa fa-exclamation-circle fa-2x"></i>&nbsp;
            </td>
            <td class="bold colored medium text-center" ng-bind="current_client.response">
            </td>
          </tr>
        </table>
      </div>
    </div>

    <div class="col-md-6">
     <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">Próximo Cliente</h3>
        </div>
        <table class="table">
          <tr>
            <td class="text-left">
              <i class="fa fa-ticket fa-2x"></i>
            </td>
            <td class="bold colored medium text-center" ng-bind="called_client.number">
            </td>
          </tr>
          <tr>
            <td>
              <i class="fa fa-clock-o fa-2x"></i>&nbsp;
            </td>
            <td class="bold colored medium text-center" ng-bind="formatTimestamp(called_client.enqueue_time)">
            </td>
          </tr>
           <tr>
            <td>
              <i class="fa fa-exclamation-circle fa-2x"></i>&nbsp;
            </td>
            <td class="bold colored medium text-center" ng-bind="called_client.response">
            </td>
          </tr>
        </table>
      </div>
    </div>
  </div>

  <div class="row" style="text-align: center;">
    <a id="call_button" class="btn form-control btn-primary" ng-click="callNext()">Llamar próximo</a>
  </div>

  <div class="modal fade" id="timeoutModal" data-backdrop="static">
    <div class="modal-dialog modal-sm">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Esperando por el cliente...</h4>
        </div>
        <div class="modal-body" style="text-align: center; font-size: 20px;">
          <p id="timeout" class="colored bold big"></p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary form-control" data-dismiss="modal">Cliente en caja</button>
        </div>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->

</div>

<script type='text/javascript' src='/javascripts/socket.io.js'></script>
<script>

  var app = angular.module('Caller', []);
  app.controller('callerController', function($scope,$http) {

      $scope.current_client = {};
      $scope.called_client = {};
      $scope.paydesk = {};
      $scope.socket = null;
      $scope.call_interval_id = 0;
      $scope.client_interval_id = 0;

      $scope.init = function() {

        $scope.reloadStatus();

        $scope.socket = io('http://'+window.location.host);

        $scope.socket.on('connect', function() {
          $scope.socket.emit('hello', { paydesk_id: "<%= paydesk._id %>", paydesk_number: "<%= paydesk.number %>" });
        });

        $scope.socket.on('server_message', function (data) {

          switch (data.message) {

              case 'call_received':
                $scope.startCallResponseTimeout(<%= call_timeout %>);
              break;

              case 'confirmed':
                $("#call_button").removeAttr("disabled");
                $scope.current_client = $scope.called_client;
                $scope.called_client = {};
                $scope.current_client.response = "Confirmado";
                clearInterval($scope.call_interval_id);
                $scope.startArrivalTimeout(<%= group.paydesk_arrival_timeout %>);
              break;

              case 'error':
                $("#call_button").removeAttr("disabled");
                $scope.current_client = $scope.called_client;
                $scope.called_client = {};
                $scope.current_client.response = "No disponible";
                clearInterval($scope.call_interval_id);
              break;

              case 'cancelled':
                $("#call_button").removeAttr("disabled");
                $scope.current_client = $scope.called_client;
                $scope.called_client = {};
                $scope.current_client.response = "Cancelado";
                clearInterval($scope.call_interval_id);
              break;

              case 'queue_limit_reached':
                $("#call_button").removeAttr("disabled");
                $scope.current_client = $scope.called_client;
                $scope.called_client = {};
                $scope.current_client.response = "No disponible";
                clearInterval($scope.call_interval_id);
              break;

              default:
                $("#call_button").removeAttr("disabled");
                $scope.current_client = $scope.called_client;
                $scope.called_client = {};
                $scope.current_client.response = "Reencolado";
                clearInterval($scope.call_interval_id);
              break;
           }

           $scope.$apply();

        });

        setInterval(function() {
          $scope.socket.emit('paydesk_keepalive', { paydesk_id: "<%= paydesk._id %>" });
        }, 10000);
      }

      $scope.reloadStatus = function() {

        $scope.paydesk        = <%- JSON.stringify(paydesk) %>;
        $scope.current_client = <%- JSON.stringify(current_client) %>;
        $scope.called_client  = <%- JSON.stringify(called_client) %>;

        if ($scope.current_client.remain_to_arrive > 0) {
           $scope.startArrivalTimeout($scope.current_client.remain_to_arrive);
        }

        if ($scope.called_client.remain_to_response > 0) {
           $("#call_button").attr("disabled","disabled");
           $scope.startCallResponseTimeout($scope.called_client.remain_to_response);
        }

      }

      $scope.callNext = function() {

        if ($("#call_button").attr("disabled") == undefined) {
          $http.get("/caller/<%= paydesk._id %>/clients/next").success(function(next_client) {

            $("#call_button").attr("disabled","disabled");

            // $scope.called_client = next_client;
            // $scope.startCallResponseTimeout(<%= call_timeout %>);
            $scope.called_client = next_client;
            $scope.called_client.response = "Llamando...";

          }).error(function() {
              $scope.called_client.number = "-";
              $scope.called_client.response = "-";
              $scope.called_client.enqueue_time = "-";
          });
        }
      }

      $scope.formatTimestamp = function(timestamp) {
        var date = new Date(timestamp);
        var hours = (date.getHours().toString().length == 1 ? "0" : "") + date.getHours();
        var minutes = (date.getMinutes().toString().length == 1 ? "0" : "") + date.getMinutes();

        return timestamp == undefined ? '' : hours+':'+minutes;
      }

      $scope.startCallResponseTimeout = function(seconds) {
        var count =  seconds;
        $scope.called_client.response = "Llamando... " + --count;
          $scope.call_interval_id = setInterval(function() {
            $scope.called_client.response = "Llamando... " + count--;
            $scope.$apply();

            if (count == 0) {
              clearInterval($scope.call_interval_id);
            }

          }, 1000);
      }

      $scope.startArrivalTimeout = function(seconds, callback) {
        var count = seconds;
        clearInterval($scope.confirmed_interval_id);
        $('#timeoutModal').modal();
        $("#timeout").html(--count);
        $scope.confirmed_interval_id = setInterval(function() {

          $("#timeout").html(count--);

          if (count == 0) {
            clearInterval($scope.confirmed_interval_id);
            $('#timeoutModal').modal('hide');
          }

        }, 1000);
      }

      // $scope.alertLackOfPaydesksInGroup = function() {

      //     var response = false;

      //     $.ajax({ url: "/caller/<%= paydesk._id %>/group", async: false ,
      //       success: function(group) {

      //         var count = group.paydesks.filter(paydesk => { return paydesk.active }).length

      //           if (count == 1 && confirm("Atención! Esta es la última caja activa en el grupo. Si la cierra, el grupo no estará disponible para los clientes. Desea continuar?")) {

      //           }
      //       }
      //     });


      // }



  });

</script>
