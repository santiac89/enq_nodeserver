#!/usr/bin/env node
var debug = require('debug')('enq');
var app = require('../app');
var exec = require('child_process').exec;
var cluster = require('cluster');
var event_bus = require('../util/event_bus');

app.set('port', 3232);
	// if (cluster.isMaster) {


		var child = exec('node ./util/service_broadcaster.js '+ app.get('port'));
		child.stdout.on('data', function(data) { console.log(data); });

		// Count the machine's CPUs
	 // 	var cpuCount = require('os').cpus().length;

		// // Create a worker for each CPU
		// for (var i = 0; i < cpuCount; i += 1) {
		// 	cluster.fork();
		// }

	// Code to run if we're in a worker process
	// } else {

		var server = app.listen(app.get('port'), function() {
			console.log('Express server listening on port ' + server.address().port);
		});

		app.set('io',require('socket.io')(server));

		app.get('io').on('connection', function(ws) {
		  event_bus.on('client_response', function(res) {
		    ws.emit('client_response', res);
		  });
		});

	// }

	Array.prototype.last = function() {
		return this[this.length];
	}

	Array.prototype.removeObj = function(obj) {
		var i = this.indexOf(obj);
		this.splice(i,1);
		return obj;
	}
