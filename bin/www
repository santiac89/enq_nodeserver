#!/usr/bin/env node
var debug = require('debug')('enq');
app = require('../app');
var fork = require('child_process').fork;
var PaydeskBus = require('../util/paydesk_bus');
var mongoose = require('mongoose');///
var Io = require('socket.io');
var config = require('../config');
var Group = require('../models/group');
var Counter = require('../models/counter');

app.set('port', config.server_port);

var child = fork('./util/service_broadcaster.js', [config.server_port]);
child.on('message', function(data) { console.log(data); });

process.on('SIGINT', function() {
	mongoose.connection.close(function () {
    child.kill();
    process.exit(0);
  });
});

/*
**** THIRD-PARTY CONFIGURATIONS ****
*/
mongoose.connect('mongodb://'+config.mongo.address+':'+config.mongo.port+'/'+config.mongo.db);

var server = app.listen(app.get('port'), function() {

	console.log('Express server listening on port ' + server.address().port);

	Group.reset();
	Counter.reset();
/*
* TODO: MOVER TODO ESTO
	PAYDESKS WEBSOCKETS CONFIGURATION
*/
	var io = Io(server);

	PaydeskBus.init(io);

});


